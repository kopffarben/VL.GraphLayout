[Summary("Increments values in a buffer.")]
shader ApplyDisplacment_ComputeFX : ComputeShaderBase
{
    float	maxDist             = 1.0;
    float	minDist             = 0.1;   
    float   damping             = 0.01;

    RWStructuredBuffer<float3>  nodeBuffer;
    //RWStructuredBuffer<float3>  dispBuffer;
    RWByteAddressBuffer           dispBuffer;

    override void Compute()
    {
        uint index = streams.DispatchThreadId.x;

        uint numNodes, stride;
        nodeBuffer.GetDimensions(numNodes,stride); 

        if (index>numNodes) return;

        //float3 disp = dispBuffer[index];
        float x,y,z;
        dispBuffer.InterlockedExchange((index * 3 + 0) * 4, 0.0 ,x);
        dispBuffer.InterlockedExchange((index * 3 + 1) * 4, 0.0 ,y);
        dispBuffer.InterlockedExchange((index * 3 + 2) * 4, 0.0 ,z);
        float3 disp = float3(x,y,z);


        float len = length(disp);

        if (len > minDist)
        {
            nodeBuffer[index] = nodeBuffer[index] + (normalize(disp) * min(len,maxDist) * damping);
        }
    }

    bool IsNaN(float x)
    {
        return (asuint(x) & 0x7fffffff) > 0x7f800000;
    }
};